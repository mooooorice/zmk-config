/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        umlaut_a: umlaut_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp RALT>
                , <&macro_tap &kp SQT>
                , <&macro_release &kp LSHFT &kp RALT>
                , <&macro_tap &kp A>
                ;
        };
        umlaut_o: umlaut_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp RALT>
                , <&macro_tap &kp SQT>
                , <&macro_release &kp LSHFT &kp RALT>
                , <&macro_tap &kp O>
                ;
        };
        umlaut_u: umlaut_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp RALT>
                , <&macro_tap &kp SQT>
                , <&macro_release &kp LSHFT &kp RALT>
                , <&macro_tap &kp U>
                ;
        };
        last_window: last_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LGUI>
                ;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };
        statusbar: statusbar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp I>
                , <&macro_release &kp LGUI>
                ;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | PASTE|  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |PRSCR  |
// | CAPS |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |'(LCTR)|
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT  |
//                    | RSE | GUI | SPC |   | ENT | TAB  | LWR |
                        bindings = <
   &paste   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp PSCRN
   &kp CAPS   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &mt LCTRL SQT
   &kp LSHFT  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LSHFT
                  &mo 2 &mt LGUI BSPC &kp SPACE   &kp RET &kp TAB &mo 1 
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | F12  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |PRSCR |
// | LALT |     |  Ä  |  Ö  |  Ü  |     |   | LFT | DWN |  UP | RGT | DEL | LCTR |
// | SHFT | BT1 | BT2 | BT3 | BT4 |BTCLR|   |HOME |PGDN |PGUP | END |MOD+I|  ESC |
//                    |     | GUI | SPC |   | ENT |     | TAB |
                        bindings = <
   &kp F12   &mt F1 N1       &mt F2 N2       &mt F3 N3       &mt F4 N4       &mt F5 N5             &mt F6 N6   &mt F7 N7       &mt F8 N8    &mt F9 N9        &mt F10 N0 &mt F11 PSCRN
   &kp LALT   &trans       &umlaut_a    &umlaut_u    &umlaut_o    &trans             &kp LEFT &kp DOWN     &kp UP    &kp RIGHT     &kp DEL &kp LCTRL
   &kp LSHFT  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR         &kp HOME    &kp PG_DN &kp PG_UP   &kp END   &statusbar &kp ESC
                                    &trans       &mt LGUI BSPC     &kp SPACE                &kp RET  &kp TAB  &trans 
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | COPY |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  (  |  )  |  *  |PRSCR |
// |LAWIND|MOD+I|PREV | PP  | NXT |SCRUP|   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |      |     |     |     |     |SCRDN|   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    |     | GUI | SPC |   | ENT |     | TAB |
                        bindings = <
   &copy  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp LPAR &kp RPAR &kp KP_MULTIPLY &kp PSCRN
   &last_window &statusbar   &kp K_PREV   &kp K_PP  &kp K_NEXT   &kp K_SCROLL_UP      &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH        &mt LCTRL GRAVE
   &trans &trans   &trans &trans   &trans   &kp  K_SCROLL_DOWN    &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE        &kp TILDE
                             &trans &mt LGUI BSPC   &kp SPACE   &kp RET    &kp TAB   &trans
                        >;
                };
        };
};
